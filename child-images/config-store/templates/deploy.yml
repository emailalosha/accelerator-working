#
# Legal Notice: Installation and use of this script is subject to 
# a license agreement with Midships Limited (a company registered 
# in England, under company registration number: 11324587).
# This script cannot be modified or shared with another organisation 
# unless approved in writing by Midships Limited.
# You as a user of this script must review, accept and comply with the 
# license terms of each downloaded/installed package that is referenced 
# by this script. By proceeding with the installation, you are accepting 
# the license terms of each package, and acknowledging that your use of 
# each package will be subject to its respective license terms.
#=======================================================================
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.configstore.pod_name | quote }}
  # Should NOT include digits
  namespace: {{ .Values.configstore.namespace | quote }}
spec:
  serviceName: {{ .Values.configstore.service_name | quote }}
  replicas: {{ .Values.configstore.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.configstore.pod_name | quote}}
  template:
    metadata:
      labels:
        app: {{ .Values.configstore.pod_name | quote}}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - {{ .Values.configstore.pod_name | quote }}
              topologyKey: "kubernetes.io/hostname"
      securityContext:
        runAsUser: 10002
        runAsGroup: 10002
        fsGroup: 10002
      volumes:
        - name: pvc
          persistentVolumeClaim:
            claimName: pvc
        - name: tmp
          emptyDir: {}
        {{- if eq (lower .Values.configstore.secrets_mode | quote) ("k8s" | quote) }}
        - name: configmaps-cs
          configMap:
            name: {{ .Values.configstore.pod_name | quote }}
        - name: secrets-cs
          secret:
            secretName: {{ .Values.configstore.pod_name | quote }}
        {{- /*if eq (.Values.configstore.self_replicate | quote) ("false" | quote) */}}
        - name: secrets-rs
          secret:
            secretName: {{ .Values.replserver.pod_name | quote }}
        {{- /*end*/}}
        {{- end }}
      containers:
      - name: {{ .Values.configstore.pod_name | quote }}
        image: {{ .Values.configstore.image | quote }}
        imagePullPolicy: Always
        volumeMounts:
          - mountPath: "/opt/ds/app"
            name: pvc
          - mountPath: "/tmp"
            name: tmp
          {{- if eq (lower .Values.configstore.secrets_mode | quote) ("k8s" | quote) }}
          - name: configmaps-cs
            mountPath: /opt/ds/configmaps # do NOT change
          - name: secrets-cs
            mountPath: /opt/ds/secrets # do NOT change
          {{- /*if eq (.Values.configstore.self_replicate | quote) ("false" | quote) */}}
          - name: secrets-rs
            mountPath: /opt/rs/secrets # do NOT change
          {{- /*end*/}}
          {{- end }}
        resources:
          limits:
            memory: 1Gi
          requests:
            memory: 1Gi
        readinessProbe:
          httpGet:
            port: 8444
            path: /alive
            scheme: HTTPS
          initialDelaySeconds: 40 # how long to wait before checking
          periodSeconds: 5 # how long to wait between checks
          successThreshold: 2 # how many successes to hit before accepting
          failureThreshold: 10 # how many failures to accept before failing
          timeoutSeconds: 5 # how long to wait for a response
        env:
          - name: POD_BASENAME
            value: {{ .Values.configstore.pod_name | quote }}
          - name: POD_SERVICE_NAME
            value: {{ .Values.configstore.service_name | quote }}
          - name: RS_SVC
            value: {{ .Values.configstore.rs_svc | quote }}
            # Comma separated Replication Server (RS) domains/hostnames for replication.
            # Only used when SELF_REPLICATE is set NOT 'true'.
            # Format is '{hostname1}:{replication-port},{hostname2}:{replication-port}'
          - name: CLUSTER_DOMAIN
            value: {{ .Values.configstore.cluster_domain | quote }}
            # Kubernetes cluster domain
          - name: DS_BASE_DN
            value: {{ .Values.configstore.basedn | quote }}
            # For instance "ou=am-config"
          - name: ENV_TYPE
            value: {{ .Values.configstore.env_type | quote }}
            # Recommended vaules are SIT, UAT, NFT, PRE_PROD, PROD
          - name: SELF_REPLICATE
            value: {{ .Values.configstore.self_replicate | quote }}
            # Set to false when using single instance or external Replication server. Acccepted values 'true' or 'false'
          - name: USE_CUSTOM_JAVA_PROPS
            value: {{ .Values.configstore.use_javaProps | quote }}
            # Use of external file for loading java properties. Acccepted values 'true' or 'false'
          - name: DISABLE_INSECURE_COMMS
            value: {{ .Values.configstore.disable_insecure_comms | quote }}
            # Acccepted values 'true' or 'false'.
          - name: SECRETS_MODE
            value: {{ .Values.configstore.secrets_mode | default "k8s" | quote }}
            # Accepted values 'k8s' or 'REST'. Former where secrets and config are stored in K8s, later in a REST secrets manager.
          - name: SIDECAR_MODE
            value: {{ .Values.configstore.sidecar_mode | quote }}
            # Set to 'true' when running as sidecar with Access Manager pod. Acccepted values 'true' or 'false'
          - name: VAULT_BASE_URL
            value: {{ .Values.vault.url | quote }}
          - name: VAULT_CLIENT_PATH_CS
            value: {{ .Values.vault.cs_path | quote }}
          - name: VAULT_CLIENT_PATH_RS
            value: {{ .Values.vault.rs_path | quote }}
          - name: VAULT_TOKEN
            value: {{ .Values.vault.token | quote }}
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        ports:
          - name: ldaps
            containerPort: 1636
            protocol: TCP
          - name: ldaps-two
            containerPort: 1637
            protocol: TCP
          - name: admin
            containerPort: 4444
            protocol: TCP
          - name: admin-two
            containerPort: 4445
            protocol: TCP
          - name: replication
            containerPort: 8989
            protocol: TCP
          - name: https
            containerPort: 8443
            protocol: TCP
          - name: https-two
            containerPort: 8444
            protocol: TCP
      imagePullSecrets:
      - name: fr-nexus-docker
  volumeClaimTemplates:
    - metadata:
        name: pvc
        annotations:
          pv.beta.kubernetes.io/gid: "0"
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 20Gi
